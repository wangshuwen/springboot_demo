<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zkxh.demo.dao.base_station.BaseStationMapper">
    <resultMap id="BaseResultMap" type="com.zkxh.demo.model.base_station.BaseStation">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="base_station_id" jdbcType="INTEGER" property="baseStationId"/>
        <result column="base_station_num" jdbcType="INTEGER" property="baseStationNum"/>
        <result column="base_station_ip" jdbcType="VARCHAR" property="baseStationIp"/>
        <result column="software_version" jdbcType="VARCHAR" property="softwareVersion"/>
        <result column="hardware_version" jdbcType="VARCHAR" property="hardwareVersion"/>
        <result column="power_supply" jdbcType="VARCHAR" property="powerSupply"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="position_x" jdbcType="DOUBLE" property="positionX"/>
        <result column="position_y" jdbcType="DOUBLE" property="positionY"/>
        <result column="position_z" jdbcType="DOUBLE" property="positionZ"/>
        <result column="channel" jdbcType="INTEGER" property="channel"/>
        <result column="emissive_power" jdbcType="INTEGER" property="emissivePower"/>
        <result column="antenna_gain" jdbcType="INTEGER" property="antennaGain"/>
        <result column="encryption" jdbcType="INTEGER" property="encryption"/>
        <result column="SSID" jdbcType="VARCHAR" property="ssid"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="subnet_mask" jdbcType="VARCHAR" property="subnetMask"/>
        <result column="zone_id" jdbcType="INTEGER" property="zoneId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        base_station_id, base_station_num, base_station_ip, software_version, hardware_version,
        power_supply, create_time, remark, update_time, position_x, position_y, position_z,
        channel, emissive_power, antenna_gain, encryption, SSID, status, subnet_mask, zone_id
    </sql>
    <select id="selectByExample" parameterType="com.zkxh.demo.model.base_station.BaseStationExample"
            resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from base_station
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from base_station
        where base_station_id = #{baseStationId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from base_station
        where base_station_id = #{baseStationId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.zkxh.demo.model.base_station.BaseStationExample">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from base_station
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.zkxh.demo.model.base_station.BaseStation">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into base_station (base_station_id, base_station_num, base_station_ip,
        software_version, hardware_version, power_supply,
        create_time, remark, update_time,
        position_x, position_y, position_z,
        channel, emissive_power, antenna_gain,
        encryption, SSID, status,
        subnet_mask, zone_id)
        values (#{baseStationId,jdbcType=INTEGER}, #{baseStationNum,jdbcType=INTEGER},
        #{baseStationIp,jdbcType=VARCHAR},
        #{softwareVersion,jdbcType=VARCHAR}, #{hardwareVersion,jdbcType=VARCHAR}, #{powerSupply,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP},
        #{positionX,jdbcType=DOUBLE}, #{positionY,jdbcType=DOUBLE}, #{positionZ,jdbcType=DOUBLE},
        #{channel,jdbcType=INTEGER}, #{emissivePower,jdbcType=INTEGER}, #{antennaGain,jdbcType=INTEGER},
        #{encryption,jdbcType=INTEGER}, #{ssid,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
        #{subnetMask,jdbcType=VARCHAR}, #{zoneId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.zkxh.demo.model.base_station.BaseStation">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into base_station
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="baseStationId != null">
                base_station_id,
            </if>
            <if test="baseStationNum != null">
                base_station_num,
            </if>
            <if test="baseStationIp != null">
                base_station_ip,
            </if>
            <if test="softwareVersion != null">
                software_version,
            </if>
            <if test="hardwareVersion != null">
                hardware_version,
            </if>
            <if test="powerSupply != null">
                power_supply,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="positionX != null">
                position_x,
            </if>
            <if test="positionY != null">
                position_y,
            </if>
            <if test="positionZ != null">
                position_z,
            </if>
            <if test="channel != null">
                channel,
            </if>
            <if test="emissivePower != null">
                emissive_power,
            </if>
            <if test="antennaGain != null">
                antenna_gain,
            </if>
            <if test="encryption != null">
                encryption,
            </if>
            <if test="ssid != null">
                SSID,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="subnetMask != null">
                subnet_mask,
            </if>
            <if test="zoneId != null">
                zone_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="baseStationId != null">
                #{baseStationId,jdbcType=INTEGER},
            </if>
            <if test="baseStationNum != null">
                #{baseStationNum,jdbcType=INTEGER},
            </if>
            <if test="baseStationIp != null">
                #{baseStationIp,jdbcType=VARCHAR},
            </if>
            <if test="softwareVersion != null">
                #{softwareVersion,jdbcType=VARCHAR},
            </if>
            <if test="hardwareVersion != null">
                #{hardwareVersion,jdbcType=VARCHAR},
            </if>
            <if test="powerSupply != null">
                #{powerSupply,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="positionX != null">
                #{positionX,jdbcType=DOUBLE},
            </if>
            <if test="positionY != null">
                #{positionY,jdbcType=DOUBLE},
            </if>
            <if test="positionZ != null">
                #{positionZ,jdbcType=DOUBLE},
            </if>
            <if test="channel != null">
                #{channel,jdbcType=INTEGER},
            </if>
            <if test="emissivePower != null">
                #{emissivePower,jdbcType=INTEGER},
            </if>
            <if test="antennaGain != null">
                #{antennaGain,jdbcType=INTEGER},
            </if>
            <if test="encryption != null">
                #{encryption,jdbcType=INTEGER},
            </if>
            <if test="ssid != null">
                #{ssid,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="subnetMask != null">
                #{subnetMask,jdbcType=VARCHAR},
            </if>
            <if test="zoneId != null">
                #{zoneId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.zkxh.demo.model.base_station.BaseStationExample"
            resultType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from base_station
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update base_station
        <set>
            <if test="record.baseStationId != null">
                base_station_id = #{record.baseStationId,jdbcType=INTEGER},
            </if>
            <if test="record.baseStationNum != null">
                base_station_num = #{record.baseStationNum,jdbcType=INTEGER},
            </if>
            <if test="record.baseStationIp != null">
                base_station_ip = #{record.baseStationIp,jdbcType=VARCHAR},
            </if>
            <if test="record.softwareVersion != null">
                software_version = #{record.softwareVersion,jdbcType=VARCHAR},
            </if>
            <if test="record.hardwareVersion != null">
                hardware_version = #{record.hardwareVersion,jdbcType=VARCHAR},
            </if>
            <if test="record.powerSupply != null">
                power_supply = #{record.powerSupply,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.positionX != null">
                position_x = #{record.positionX,jdbcType=DOUBLE},
            </if>
            <if test="record.positionY != null">
                position_y = #{record.positionY,jdbcType=DOUBLE},
            </if>
            <if test="record.positionZ != null">
                position_z = #{record.positionZ,jdbcType=DOUBLE},
            </if>
            <if test="record.channel != null">
                channel = #{record.channel,jdbcType=INTEGER},
            </if>
            <if test="record.emissivePower != null">
                emissive_power = #{record.emissivePower,jdbcType=INTEGER},
            </if>
            <if test="record.antennaGain != null">
                antenna_gain = #{record.antennaGain,jdbcType=INTEGER},
            </if>
            <if test="record.encryption != null">
                encryption = #{record.encryption,jdbcType=INTEGER},
            </if>
            <if test="record.ssid != null">
                SSID = #{record.ssid,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.subnetMask != null">
                subnet_mask = #{record.subnetMask,jdbcType=VARCHAR},
            </if>
            <if test="record.zoneId != null">
                zone_id = #{record.zoneId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update base_station
        set base_station_id = #{record.baseStationId,jdbcType=INTEGER},
        base_station_num = #{record.baseStationNum,jdbcType=INTEGER},
        base_station_ip = #{record.baseStationIp,jdbcType=VARCHAR},
        software_version = #{record.softwareVersion,jdbcType=VARCHAR},
        hardware_version = #{record.hardwareVersion,jdbcType=VARCHAR},
        power_supply = #{record.powerSupply,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        remark = #{record.remark,jdbcType=VARCHAR},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        position_x = #{record.positionX,jdbcType=DOUBLE},
        position_y = #{record.positionY,jdbcType=DOUBLE},
        position_z = #{record.positionZ,jdbcType=DOUBLE},
        channel = #{record.channel,jdbcType=INTEGER},
        emissive_power = #{record.emissivePower,jdbcType=INTEGER},
        antenna_gain = #{record.antennaGain,jdbcType=INTEGER},
        encryption = #{record.encryption,jdbcType=INTEGER},
        SSID = #{record.ssid,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=INTEGER},
        subnet_mask = #{record.subnetMask,jdbcType=VARCHAR},
        zone_id = #{record.zoneId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.zkxh.demo.model.base_station.BaseStation">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update base_station
        <set>
            <if test="baseStationNum != null">
                base_station_num = #{baseStationNum,jdbcType=INTEGER},
            </if>
            <if test="baseStationIp != null">
                base_station_ip = #{baseStationIp,jdbcType=VARCHAR},
            </if>
            <if test="softwareVersion != null">
                software_version = #{softwareVersion,jdbcType=VARCHAR},
            </if>
            <if test="hardwareVersion != null">
                hardware_version = #{hardwareVersion,jdbcType=VARCHAR},
            </if>
            <if test="powerSupply != null">
                power_supply = #{powerSupply,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="positionX != null">
                position_x = #{positionX,jdbcType=DOUBLE},
            </if>
            <if test="positionY != null">
                position_y = #{positionY,jdbcType=DOUBLE},
            </if>
            <if test="positionZ != null">
                position_z = #{positionZ,jdbcType=DOUBLE},
            </if>
            <if test="channel != null">
                channel = #{channel,jdbcType=INTEGER},
            </if>
            <if test="emissivePower != null">
                emissive_power = #{emissivePower,jdbcType=INTEGER},
            </if>
            <if test="antennaGain != null">
                antenna_gain = #{antennaGain,jdbcType=INTEGER},
            </if>
            <if test="encryption != null">
                encryption = #{encryption,jdbcType=INTEGER},
            </if>
            <if test="ssid != null">
                SSID = #{ssid,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="subnetMask != null">
                subnet_mask = #{subnetMask,jdbcType=VARCHAR},
            </if>
            <if test="zoneId != null">
                zone_id = #{zoneId,jdbcType=INTEGER},
            </if>
        </set>
        where base_station_id = #{baseStationId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zkxh.demo.model.base_station.BaseStation">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update base_station
        set base_station_num = #{baseStationNum,jdbcType=INTEGER},
        base_station_ip = #{baseStationIp,jdbcType=VARCHAR},
        software_version = #{softwareVersion,jdbcType=VARCHAR},
        hardware_version = #{hardwareVersion,jdbcType=VARCHAR},
        power_supply = #{powerSupply,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        remark = #{remark,jdbcType=VARCHAR},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        position_x = #{positionX,jdbcType=DOUBLE},
        position_y = #{positionY,jdbcType=DOUBLE},
        position_z = #{positionZ,jdbcType=DOUBLE},
        channel = #{channel,jdbcType=INTEGER},
        emissive_power = #{emissivePower,jdbcType=INTEGER},
        antenna_gain = #{antennaGain,jdbcType=INTEGER},
        encryption = #{encryption,jdbcType=INTEGER},
        SSID = #{ssid,jdbcType=VARCHAR},
        status = #{status,jdbcType=INTEGER},
        subnet_mask = #{subnetMask,jdbcType=VARCHAR},
        zone_id = #{zoneId,jdbcType=INTEGER}
        where base_station_id = #{baseStationId,jdbcType=INTEGER}
    </update>

    <select id="selectBaseStationInfoByTime" parameterType="java.util.Date" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM base_station
        <where>
            <if test="begin != null and begin neq '' ">
                create_time &gt;= #{begin}
            </if>
            <if test="end != null and end neq '' ">
                AND create_time &lt;= #{end}
            </if>
        </where>
    </select>
    <select id="selectAllBaseStationInfo" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM base_station
    </select>

    <select id="selectBaseStationInfoByStartTime" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM base_station
        <where>
            <if test="begin != null and begin neq '' ">
                create_time &gt;= #{begin}
            </if>
        </where>
    </select>
    <select id="selectBaseStationInfoByEndTime" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM base_station
        <where>
            <if test="end != null and end neq '' ">
                create_time &lt;= #{end}
            </if>
        </where>
    </select>

    <select id="selectBaseStationPositionInfo" resultType="java.util.HashMap">
    SELECT base_station_id,base_station_num,position_x,position_y,position_z
    FROM base_station
    WHERE status = 1
  </select>


    <select id="selectBaseStationPositionInfoNotUsed" resultType="java.util.HashMap">
    SELECT base_station_id,base_station_num
    FROM base_station
    WHERE status = 0
  </select>

    <select id="selectCountStationByBaseStationNum" parameterType="java.lang.Integer" resultType="boolean">
    SELECT COUNT(base_station_id)
    FROM base_station
    WHERE base_station_num = #{baseStationNum}
  </select>
</mapper>
